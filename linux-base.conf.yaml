- defaults:
    link:
      create: true
      relink: true
      force: true

- clean:
    ~/:
      force: true

- link:
    ~/.hushlogin: ./.hushlogin
    ~/.bashrc: bash/.bashrc
    ~/.gitconfig: git-config/.gitconfig
    ~/.gitignore_global: git-config/.gitignore_global
    ~/.tmux.conf: tmux/.tmux.conf
    ~/.zprofile: zsh/.zprofile
    ~/.zshenv: zsh/.zshenv
    ~/.zshrc: zsh/.zshrc
    ~/.config/starship.toml: starship/starship.toml
    ~/.config/user-dirs.locale: user-dirs.locale

- shell:
    - command: |
        export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        if ! command git ls-remote git@github.com:Ajibaji/seeshellontheseasaw.git; then
          echo "You aren't me. Nothing to see here"
        else
          if [ ! -d ~/seeshellontheseasaw ]; then
            git clone git@github.com:ajibaji/seeshellontheseasaw.git ~/seeshellontheseasaw
          fi
        fi
        unset GIT_SSH_COMMAND
      stderr: true
      quiet: true
      description: git clone seeshellontheseasaw
    - command: |
        if ! command -v atuin; then
          curl --proto '=https' --tlsv1.2 -lssf https://setup.atuin.sh | sh
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing atuin
    - command: |
        if ! command -v zoxide; then
          cargo binstall -y zoxide
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing zoxide
    - command: |
        if ! command -v yazi; then
          cargo binstall -y yazi-fm yazi-cli
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing yazi
    - command: |
        if ! command -v ripgrep; then
          cargo binstall -y ripgrep
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing ripgrep
    - command: |
        if ! command -v btm; then
          cargo binstall -y bottom
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing bottom
    - command: |
        if ! command -v fd; then
          cargo binstall -y fd-find
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing fd-find
    - command: |
        if ! command -v delta; then
          cargo binstall -y git-delta
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing delta
    - command: |
        if [[ ! -x "$(command -v lazygit)" ]] && [[ "$ostype" == "linux-gnu"* ]]; then
          cd ~
          arch=$(uname -m)
          [[ "$arch" == "aarch64" ]] && arch="arm64"
          lazygit_version=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -po '"tag_name": "v\k[^"]*')
          curl -lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${lazygit_version}_linux_${arch}.tar.gz"
          tar xzf lazygit.tar.gz lazygit
          install lazygit /usr/local/bin
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing lazygit
    - command: |
        sudo wget -P ~/.local/share/fonts https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/jetbrainsmono.zip && \
          cd ~/.local/share/fonts && \
          sudo unzip -o jetbrainsmono.zip && \
          sudo rm jetbrainsmono.zip && \
          fc-cache -fv
      stdin: true
      stderr: true
      quiet: true
      description: installing jetbrains font
    - command: |
        if ! command -v fx; then
          curl https://fx.wtf/install.sh | sudo sh
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing fx
    - command: |
        if ! command -v kitty; then
          echo "my name is $(whoami)"
          curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n
        fi
      stdin: true
      stderr: true
      quiet: true
      description: installing kitty
    - command: |
        if ! command -v k9s; then
          curl -ss https://webinstall.dev/k9s | bash
        fi
      stderr: true
      quiet: true
      description: installing k9s
    - command: |
        npm i -g neovim typescript azure-pipelines-language-server typescript-language-server sql-language-server
      stdin: true
      stderr: true
      quiet: true
      description: installing npm packages
    - command: |
        sudo snap install jqp
      stdin: true
      stderr: true
      quiet: true
      description: installing jqp
    - command: |
        go install github.com/zyedidia/eget@latest
      stdin: true
      stderr: true
      quiet: true
      description: installing eget
